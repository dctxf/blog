<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>门口摔倒的老大爷</title>
  
  <subtitle>一个自由的小小小团队</subtitle>
  <link href="https://dctxf.com/atom.xml" rel="self"/>
  
  <link href="https://dctxf.com/"/>
  <updated>2020-07-24T01:54:42.019Z</updated>
  <id>https://dctxf.com/</id>
  
  <author>
    <name>dctxf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mysql 初始化</title>
    <link href="https://dctxf.com/2020/07/24/Mysql-%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <id>https://dctxf.com/2020/07/24/Mysql-%E5%88%9D%E5%A7%8B%E5%8C%96/</id>
    <published>2020-07-24T01:42:55.000Z</published>
    <updated>2020-07-24T01:54:42.019Z</updated>
    
    <content type="html"><![CDATA[<p>最近装了个数据库，死活连接不上，反正没什么东西，就重新初始化得了，记录下初始化的步骤</p><span id="more"></span><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>查看数据存储的地方</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/my.conf</span><br></pre></td></tr></table></figure><p>找到下面一句话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datadir=/var/lib/mysql</span><br></pre></td></tr></table></figure><ol start="2"><li>备份数据</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /var/lib/mysql /var/lib/mysql.bk</span><br></pre></td></tr></table></figure><ol start="3"><li>重新初始化</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --user=mysql</span><br></pre></td></tr></table></figure><h2 id="查看初始化密码"><a href="#查看初始化密码" class="headerlink" title="查看初始化密码"></a>查看初始化密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/mysqld.log | grep -i &#x27;temporary password&#x27;</span><br></pre></td></tr></table></figure><h2 id="修改初始化密码"><a href="#修改初始化密码" class="headerlink" title="修改初始化密码"></a>修改初始化密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">// 输入上面找到的密码</span><br><span class="line">// 修改密码</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;new_password&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近装了个数据库，死活连接不上，反正没什么东西，就重新初始化得了，记录下初始化的步骤&lt;/p&gt;</summary>
    
    
    
    
    <category term="mysql" scheme="https://dctxf.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Big Sur PD虚拟机安装 [BIErrorDomain错误3]</title>
    <link href="https://dctxf.com/2020/06/29/Big-Sur-PD%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85-BIErrorDomain%E9%94%99%E8%AF%AF3/"/>
    <id>https://dctxf.com/2020/06/29/Big-Sur-PD%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85-BIErrorDomain%E9%94%99%E8%AF%AF3/</id>
    <published>2020-06-29T02:07:22.000Z</published>
    <updated>2020-06-29T02:16:09.376Z</updated>
    
    <content type="html"><![CDATA[<p>为了尝鲜用虚拟机装个系统，中间遇到这个错误</p><span id="more"></span><h2 id="错误问题"><a href="#错误问题" class="headerlink" title="错误问题"></a>错误问题</h2><h3 id="OS-MacOS-Parallels-15（Mac）：将-macOS-Catalina-Beta-更新为-Big-Sur-Beta-BIErrorDomain-错误-3"><a href="#OS-MacOS-Parallels-15（Mac）：将-macOS-Catalina-Beta-更新为-Big-Sur-Beta-BIErrorDomain-错误-3" class="headerlink" title="[OS-MacOS] Parallels 15（Mac）：将 macOS Catalina Beta 更新为 Big Sur Beta [BIErrorDomain 错误 3]"></a>[OS-MacOS] Parallels 15（Mac）：将 macOS Catalina Beta 更新为 Big Sur Beta [BIErrorDomain 错误 3]</h3><h4 id="解决方案（VMware-Fusion）"><a href="#解决方案（VMware-Fusion）" class="headerlink" title="解决方案（VMware Fusion）"></a>解决方案（VMware Fusion）</h4><p>设置参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbios.reflectHost = &quot;TRUE&quot;</span><br></pre></td></tr></table></figure><h4 id="解决方案（Parallels-Desktop）"><a href="#解决方案（Parallels-Desktop）" class="headerlink" title="解决方案（Parallels Desktop）"></a>解决方案（Parallels Desktop）</h4><h5 id="1-在真实的主机上的终端输入以下命令"><a href="#1-在真实的主机上的终端输入以下命令" class="headerlink" title="1. 在真实的主机上的终端输入以下命令"></a>1. 在真实的主机上的终端输入以下命令</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ioreg -l | grep board-id</span><br></pre></td></tr></table></figure><p>把得到的结果记录下来，例如我的是<code>Mac-1E7E29AD0135F9BC</code></p><h5 id="2-再在终端上输入"><a href="#2-再在终端上输入" class="headerlink" title="2. 再在终端上输入"></a>2. 再在终端上输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl hw.model</span><br></pre></td></tr></table></figure><p>并记录值,例如我的值是<code>MacBookPro15,3</code></p><h4 id="3-最后"><a href="#3-最后" class="headerlink" title="3. 最后"></a>3. 最后</h4><p>用上面的两个值拼成下面的样子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">devices.mac_hw_model=&quot;MacBookPro15,3&quot;</span><br><span class="line">devices.smbios.board_id=&quot;Mac-1E7E29AD0135F9BC&quot;</span><br></pre></td></tr></table></figure><p>把这段复制到 pd 虚拟机的<code>硬件-启动顺序-高级设置-引导标识</code>粘贴进去，再次启动即可</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://dev-dream-world.tistory.com/139">[OS - 🍎 macOS] Parallels 15 (Mac): Updating macOS Catalina Beta to Big Sur Beta [BIErrorDomain error 3]</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;为了尝鲜用虚拟机装个系统，中间遇到这个错误&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL时间和日期相关[待更新]</title>
    <link href="https://dctxf.com/2020/04/07/MySQL%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%A5%E6%9C%9F%E7%9B%B8%E5%85%B3/"/>
    <id>https://dctxf.com/2020/04/07/MySQL%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%A5%E6%9C%9F%E7%9B%B8%E5%85%B3/</id>
    <published>2020-04-07T08:57:22.000Z</published>
    <updated>2020-04-15T06:31:09.851Z</updated>
    
    <content type="html"><![CDATA[<p>记录下自己平常用到的日期格式化，时间格式化的相关 SQL</p><span id="more"></span><h2 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DATE_FORMAT(create_time, &#x27;%Y-%m-%d %H:%i:%S&#x27;) AS create_time</span><br></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><table><thead><tr><th align="left">参数</th><th align="left">秒数</th></tr></thead><tbody><tr><td align="left"><code>%W</code></td><td align="left">星期名字(Sunday……Saturday)</td></tr><tr><td align="left"><code>%D</code></td><td align="left">有英语前缀的月份的日期(1st, 2nd, 3rd, 等等。）</td></tr><tr><td align="left"><code>%Y</code></td><td align="left">年, 数字, 4 位</td></tr><tr><td align="left"><code>%y</code></td><td align="left">年, 数字, 2 位</td></tr><tr><td align="left"><code>%a</code></td><td align="left">缩写的星期名字(Sun……Sat)</td></tr><tr><td align="left"><code>%d</code></td><td align="left">月份中的天数, 数字(00……31)</td></tr><tr><td align="left"><code>%e</code></td><td align="left">月份中的天数, 数字(0……31)</td></tr><tr><td align="left"><code>%m</code></td><td align="left">月, 数字(01……12)</td></tr><tr><td align="left"><code>%c</code></td><td align="left">月, 数字(1……12)</td></tr><tr><td align="left"><code>%b</code></td><td align="left">缩写的月份名字(Jan……Dec)</td></tr><tr><td align="left"><code>%j</code></td><td align="left">一年中的天数(001……366)</td></tr><tr><td align="left"><code>%H</code></td><td align="left">小时(00……23)</td></tr><tr><td align="left"><code>%k</code></td><td align="left">小时(0……23)</td></tr><tr><td align="left"><code>%h</code></td><td align="left">小时(01……12)</td></tr><tr><td align="left"><code>%I</code></td><td align="left">小时(01……12)</td></tr><tr><td align="left"><code>%l</code></td><td align="left">小时(1……12)</td></tr><tr><td align="left"><code>%i</code></td><td align="left">分钟, 数字(00……59)</td></tr><tr><td align="left"><code>%r</code></td><td align="left">时间,12 小时(hh:mm:ss [AP]M)</td></tr><tr><td align="left"><code>%T</code></td><td align="left">时间,24 小时(hh:mm:ss)</td></tr><tr><td align="left"><code>%S</code></td><td align="left">秒(00……59)</td></tr><tr><td align="left"><code>%s</code></td><td align="left">秒(00……59)</td></tr><tr><td align="left"><code>%p</code></td><td align="left">AM 或 PM</td></tr><tr><td align="left"><code>%w</code></td><td align="left">一个星期中的天数(0=Sunday ……6=Saturday ）</td></tr><tr><td align="left"><code>%U</code></td><td align="left">星期(0……52), 这里星期天是星期的第一天</td></tr><tr><td align="left"><code>%u</code></td><td align="left">星期(0……52), 这里星期一是星期的第一天</td></tr><tr><td align="left"><code>%%</code></td><td align="left">一个文字“%”。</td></tr></tbody></table><h2 id="返回毫秒时间戳"><a href="#返回毫秒时间戳" class="headerlink" title="返回毫秒时间戳"></a>返回毫秒时间戳</h2><p><code>UNIX_TIMESTAMP(date)</code>返回的是秒数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT UNIX_TIMESTAMP(create_time)*1000 AS create_time FROM table_name</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://blog.csdn.net/Hedy17/article/details/79376672">MySQL 用 sql 语句格式化时间和日期</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录下自己平常用到的日期格式化，时间格式化的相关 SQL&lt;/p&gt;</summary>
    
    
    
    
    <category term="mysql" scheme="https://dctxf.com/tags/mysql/"/>
    
    <category term="sql" scheme="https://dctxf.com/tags/sql/"/>
    
    <category term="date" scheme="https://dctxf.com/tags/date/"/>
    
    <category term="time" scheme="https://dctxf.com/tags/time/"/>
    
    <category term="datetime" scheme="https://dctxf.com/tags/datetime/"/>
    
    <category term="format" scheme="https://dctxf.com/tags/format/"/>
    
    <category term="格式化" scheme="https://dctxf.com/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>小程序缓存使用方式</title>
    <link href="https://dctxf.com/2020/03/31/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BC%93%E5%AD%98%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/"/>
    <id>https://dctxf.com/2020/03/31/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BC%93%E5%AD%98%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/</id>
    <published>2020-03-31T06:06:00.000Z</published>
    <updated>2020-04-15T06:31:09.852Z</updated>
    
    <content type="html"><![CDATA[<p>前端每次请求接口会造成资源浪费和性能下降，为了解决此问题，对可优化接口采用缓存处理。</p><span id="more"></span><h2 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h2><blockquote><p>第一类。强不能缓存的东西。比如：用户余额。这类必须每次请求服务器。</p></blockquote><blockquote><p>第二类。频率缓存的。比如刚才说的新闻。新闻你缓存 5min 完全没有问题。应对用户频繁刷新。5min 只有一个请求到达服务端。</p></blockquote><blockquote><p>第三类。持久缓存。一般不需要变的东西。配合服务端 check。当有变化的时候再去请求。</p></blockquote><blockquote><p>– 墨尘</p></blockquote><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>主要原理采用微信的<code>Storage</code>对象进行操作，由于异步操作不可控，这里主要用同步方式调用，具体详看<a href="https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorageSync.html">微信官方文档</a></p><h2 id="Storage"><a href="#Storage" class="headerlink" title="Storage"></a>Storage</h2><p>以下代码放在<code>src/utils/storage.js</code>里面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getStorageSync = <span class="function"><span class="keyword">function</span>(<span class="params">keyArr, ignore</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [key, invalidTime] = keyArr;</span><br><span class="line">  <span class="keyword">let</span> cache = wx.getStorageSync(key);</span><br><span class="line">  <span class="keyword">if</span> (!cache) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 查不到本地缓存返回 false</span></span><br><span class="line">  <span class="keyword">if</span> (!invalidTime) <span class="keyword">return</span> cache; <span class="comment">// 没有设置失效时间 直接返回缓存</span></span><br><span class="line">  <span class="keyword">if</span> (ignore) <span class="keyword">return</span> cache.value;</span><br><span class="line">  <span class="keyword">let</span> isInvalid = +<span class="keyword">new</span> <span class="built_in">Date</span>() - cache.expire &gt;= invalidTime; <span class="comment">// 判断是否已过期</span></span><br><span class="line">  <span class="keyword">if</span> (isInvalid) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 如果过期返回 false</span></span><br><span class="line">  <span class="keyword">return</span> cache.value;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> setStorageSync = <span class="function"><span class="keyword">function</span>(<span class="params">keyArr, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!value) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">`must be value`</span>);</span><br><span class="line">  <span class="keyword">const</span> [key, invalidTime] = keyArr;</span><br><span class="line">  <span class="keyword">const</span> expire = invalidTime ? +<span class="keyword">new</span> <span class="built_in">Date</span>() + invalidTime : <span class="literal">null</span>; <span class="comment">// 获取过期时间</span></span><br><span class="line">  wx.setStorageSync(key, expire ? &#123; expire, value &#125; : value); <span class="comment">// 设置缓存 如果有过期时间 则保存为对象形式 若没有 直接保存值</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 移除缓存</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> removeStorageSync = <span class="function"><span class="keyword">function</span>(<span class="params">keyArrs</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!keyArrs) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; keyArrs.length; index++) &#123;</span><br><span class="line">    <span class="keyword">const</span> [key] = keyArrs[index];</span><br><span class="line">    wx.removeStorageSync(key);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 清空缓存</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> clearStorageSync = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  wx.clearStorageSync();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  getStorageSync,</span><br><span class="line">  setStorageSync,</span><br><span class="line">  removeStorageSync,</span><br><span class="line">  clearStorageSync</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><p>为了统一管理缓存，和良好的代码规范，配置文件在<code>src/config.js</code>下面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> config = &#123;</span><br><span class="line"> <span class="comment">// 通用配置</span></span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 缓存key StorageKeys 缓存配置</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> STORAGE = &#123;</span><br><span class="line">  <span class="attr">LOGIN_TIME</span>: [<span class="string">&#x27;loginTime&#x27;</span>, <span class="number">1e4</span> * <span class="number">60</span> * <span class="number">60</span>],</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> config</span><br></pre></td></tr></table></figure><p><code>STORAGE</code>为缓存对象，每个 key 值为一个<strong>数组对象</strong><code>[缓存名称,缓存有效期（可为空）]</code></p><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p>接口调用时，先检测本地是否有缓存，如果有缓存直接返回缓存信息，如果没有再请求接口</p><p>示例如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getCurrentUser = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> userInfo = getStorageSync(STORAGE.USER_INFO);</span><br><span class="line">  <span class="keyword">if</span> (userInfo) <span class="keyword">return</span> userInfo;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> fly.get(<span class="string">`/api/getUser`</span>);</span><br><span class="line">  setStorageSync(STORAGE.USER_INFO, res);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;前端每次请求接口会造成资源浪费和性能下降，为了解决此问题，对可优化接口采用缓存处理。&lt;/p&gt;</summary>
    
    
    
    
    <category term="缓存" scheme="https://dctxf.com/tags/%E7%BC%93%E5%AD%98/"/>
    
    <category term="小程序" scheme="https://dctxf.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>前端导出PDF</title>
    <link href="https://dctxf.com/2020/03/31/%E5%89%8D%E7%AB%AF%E5%AF%BC%E5%87%BAPDF/"/>
    <id>https://dctxf.com/2020/03/31/%E5%89%8D%E7%AB%AF%E5%AF%BC%E5%87%BAPDF/</id>
    <published>2020-03-31T06:00:48.000Z</published>
    <updated>2020-04-15T06:31:09.852Z</updated>
    
    <content type="html"><![CDATA[<p>项目中遇到需要前端直接导出 PDF 的需求，具体实现方式如下</p><span id="more"></span><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ol><li>把 dom 转换成 canvas 并作为图片导出</li><li>把图片切分，并渲染到 PDF 上</li></ol><h2 id="采用开源库"><a href="#采用开源库" class="headerlink" title="采用开源库"></a>采用开源库</h2><ul><li><a href="https://github.com/niklasvh/html2canvas">html2canvas</a></li><li><a href="https://github.com/MrRio/jsPDF">jspdf</a></li></ul><h2 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导出页面为PDF格式</span></span><br><span class="line"><span class="keyword">import</span> html2Canvas <span class="keyword">from</span> <span class="string">&quot;html2canvas&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> JsPDF <span class="keyword">from</span> <span class="string">&quot;jspdf&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; html2pdf, html2Canvas, JsPDF &#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">html2pdf</span>(<span class="params">el, title = +<span class="keyword">new</span> <span class="built_in">Date</span>()</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> canvas = <span class="keyword">await</span> html2Canvas(el, &#123;</span><br><span class="line">    <span class="attr">allowTaint</span>: <span class="literal">true</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> A4 = [<span class="number">595.28</span>, <span class="number">841.89</span>]; <span class="comment">// A4纸的尺寸是210mm×297mm。当设定的分辨率是72像素/英寸时，A4纸的尺寸的图像的像素是595×842。</span></span><br><span class="line">  <span class="comment">// 需要打印的内容尺寸</span></span><br><span class="line">  <span class="keyword">let</span> contentWidth = canvas.width;</span><br><span class="line">  <span class="keyword">let</span> contentHeight = canvas.height;</span><br><span class="line">  <span class="comment">// 图片的尺寸</span></span><br><span class="line">  <span class="keyword">const</span> imgWidth = A4[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">let</span> imgHeight = (A4[<span class="number">0</span>] / contentWidth) * contentHeight;</span><br><span class="line">  <span class="comment">// PDF的尺寸</span></span><br><span class="line">  <span class="keyword">let</span> pageHeight = (contentWidth / A4[<span class="number">0</span>]) * A4[<span class="number">1</span>];</span><br><span class="line">  <span class="comment">// 初始打印内容参数</span></span><br><span class="line">  <span class="keyword">let</span> leftHeight = contentHeight;</span><br><span class="line">  <span class="keyword">let</span> positionY = <span class="number">0</span>; <span class="comment">// y轴偏移量</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> pageData = canvas.toDataURL(<span class="string">&quot;image/jpeg&quot;</span>, <span class="number">1.0</span>);</span><br><span class="line">  <span class="keyword">let</span> PDF = <span class="keyword">new</span> JsPDF(<span class="string">&quot;&quot;</span>, <span class="string">&quot;pt&quot;</span>, <span class="string">&quot;a4&quot;</span>);</span><br><span class="line">  <span class="comment">//当内容未超过pdf页面显示的范围，无需分页</span></span><br><span class="line">  <span class="keyword">if</span> (leftHeight &lt; pageHeight) &#123;</span><br><span class="line">    PDF.addImage(pageData, <span class="string">&quot;JPEG&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, imgWidth, imgHeight);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (leftHeight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      PDF.addImage(pageData, <span class="string">&quot;JPEG&quot;</span>, <span class="number">0</span>, positionY, imgWidth, imgHeight);</span><br><span class="line">      leftHeight -= pageHeight;</span><br><span class="line">      positionY -= A4[<span class="number">1</span>];</span><br><span class="line">      <span class="comment">//如果还存在内容继续添加新页</span></span><br><span class="line">      <span class="keyword">if</span> (leftHeight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        PDF.addPage();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  PDF.save(<span class="string">`<span class="subst">$&#123;title&#125;</span>.pdf`</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;项目中遇到需要前端直接导出 PDF 的需求，具体实现方式如下&lt;/p&gt;</summary>
    
    
    
    
    <category term="pdf" scheme="https://dctxf.com/tags/pdf/"/>
    
    <category term="html2canvas" scheme="https://dctxf.com/tags/html2canvas/"/>
    
    <category term="jspdf" scheme="https://dctxf.com/tags/jspdf/"/>
    
  </entry>
  
  <entry>
    <title>SSH免密登陆</title>
    <link href="https://dctxf.com/2020/03/31/SSH%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86/"/>
    <id>https://dctxf.com/2020/03/31/SSH%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86/</id>
    <published>2020-03-31T05:34:37.000Z</published>
    <updated>2020-04-15T06:31:09.852Z</updated>
    
    <content type="html"><![CDATA[<p>经常用 ssh 连接服务器，这里主要记下怎么免密码登录</p><span id="more"></span><h2 id="连接服务器"><a href="#连接服务器" class="headerlink" title="连接服务器"></a>连接服务器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh root@127.0.0.1 -p 2222</span><br><span class="line"># ssh 用户@host -p 端口</span><br></pre></td></tr></table></figure><h2 id="免密码登录"><a href="#免密码登录" class="headerlink" title="免密码登录"></a>免密码登录</h2><h3 id="用-ssh-keygen-创建公钥"><a href="#用-ssh-keygen-创建公钥" class="headerlink" title="用 ssh-keygen 创建公钥"></a>用 ssh-keygen 创建公钥</h3><p>在客户端创建公钥</p><p><code>如提示输入密码可忽略</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">&lt;!-- 你会看到以下代码 --&gt;</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/haifeng/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/haifeng/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/haifeng/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">7b:75:98:eb:fd:13:ce:0f:c4:cf:2c:65:cc:73:70:53 haifeng@haifeng-EX38-DS4</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+--[ RSA 2048]----+</span></span><br><span class="line"><span class="string">|                E|</span></span><br><span class="line"><span class="string">|                .|</span></span><br><span class="line"><span class="string">|              ...|</span></span><br><span class="line"><span class="string">|             + =.|</span></span><br><span class="line"><span class="string">|        S   + +.*|</span></span><br><span class="line"><span class="string">|         . . + Bo|</span></span><br><span class="line"><span class="string">|        . . . = =|</span></span><br><span class="line"><span class="string">|         . . . * |</span></span><br><span class="line"><span class="string">|            . ..=|</span></span><br><span class="line"><span class="string">+-----------------+</span></span><br></pre></td></tr></table></figure><h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls ~/.ssh/</span><br><span class="line"><span class="comment"># id_rsa  id_rsa.pub  known_hosts</span></span><br></pre></td></tr></table></figure><h3 id="上传公钥"><a href="#上传公钥" class="headerlink" title="上传公钥"></a>上传公钥</h3><p>在服务器上创建<code>authorized_keys</code>并<strong>修改权限</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch ~/.ssh/authorized_keys</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 必须将<code>~/.ssh/authorized_keys</code>的权限改为 600</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp ~/.ssh/id_rsa.pub root@127.0.0.1:~/.ssh/authorized_keys</span><br><span class="line"><span class="comment"># scp 本地公钥 user@host:~/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul><li><a href="http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html">SSH 原理与运用（一）：远程登录</a></li><li><a href="http://www.ruanyifeng.com/blog/2011/12/ssh_port_forwarding.html">SSH 原理与运用（二）：远程操作与端口转发</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;经常用 ssh 连接服务器，这里主要记下怎么免密码登录&lt;/p&gt;</summary>
    
    
    
    
    <category term="ssh" scheme="https://dctxf.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>sql批量修改字段内容</title>
    <link href="https://dctxf.com/2020/03/24/sql%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E5%AD%97%E6%AE%B5%E5%86%85%E5%AE%B9/"/>
    <id>https://dctxf.com/2020/03/24/sql%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E5%AD%97%E6%AE%B5%E5%86%85%E5%AE%B9/</id>
    <published>2020-03-24T06:08:22.000Z</published>
    <updated>2020-03-30T02:02:16.183Z</updated>
    
    <content type="html"><![CDATA[<p>在工作中有个需求，需要修改数据库字段的内容，是个 json，但我只修改 json 中的某些文字。有很多这样的 json。修改次数和时间不确定，写接口不值当，手动改太麻烦。网上搜了下，原来还有这种方法</p><span id="more"></span><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 表名 <span class="keyword">SET</span> 字段名<span class="operator">=</span>REPLACE(字段名,&quot;原来的字符串&quot;,&quot;替换后的字符串&quot;)</span><br></pre></td></tr></table></figure><p>如果不放心可先查看再替换</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> REPLACE(替换字段,&quot;原内容&quot;,&quot;新内容&quot;) <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.jb51.net/article/89847.htm">使用 SQL 批量替换语句修改、增加、删除字段内容</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在工作中有个需求，需要修改数据库字段的内容，是个 json，但我只修改 json 中的某些文字。有很多这样的 json。修改次数和时间不确定，写接口不值当，手动改太麻烦。网上搜了下，原来还有这种方法&lt;/p&gt;</summary>
    
    
    
    
    <category term="mysql" scheme="https://dctxf.com/tags/mysql/"/>
    
    <category term="sql" scheme="https://dctxf.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>mac批量删除短信</title>
    <link href="https://dctxf.com/2020/03/19/mac%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E7%9F%AD%E4%BF%A1/"/>
    <id>https://dctxf.com/2020/03/19/mac%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E7%9F%AD%E4%BF%A1/</id>
    <published>2020-03-19T01:49:20.000Z</published>
    <updated>2020-03-19T01:57:42.935Z</updated>
    
    <content type="html"><![CDATA[<p>每天都会收到大量的垃圾短信，或者各种验证码，苹果推出的同步功能确实很好，可是删除短信却不能同步。为了解决这个问题，网上找到了一个办法。再次在记录一下。</p><span id="more"></span><h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h2><p>这里用到的是苹果的脚本功能。找到你 Mac 上的<code>脚本编辑器</code><br>脚本来源于网上，但已经不知道作者是谁了…，我做了简单修改，因为原来的代码支持的是英文系统</p><ol><li>打开脚本编辑器</li><li>新建脚本<code>command + n</code></li><li>把下面的脚本粘贴进去</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">tell application &quot;Messages&quot; to activate</span><br><span class="line"></span><br><span class="line">tell application &quot;System Events&quot;</span><br><span class="line">tell process &quot;Messages&quot;</span><br><span class="line">delay 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tell window 1 -- 再告诉 第一个窗口</span><br><span class="line">repeat 500 times</span><br><span class="line">key code 51 using &#123;command down&#125;</span><br><span class="line">delay 0.3</span><br><span class="line">click button &quot;删除&quot; of sheet 1</span><br><span class="line">delay 0.2</span><br><span class="line">end repeat</span><br><span class="line">end tell</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">end tell</span><br><span class="line">end tell</span><br></pre></td></tr></table></figure><ol start="4"><li>保存，这里我建议保存到 iCloud</li><li>运行<code>command + r</code></li><li>等待运行完成</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;每天都会收到大量的垃圾短信，或者各种验证码，苹果推出的同步功能确实很好，可是删除短信却不能同步。为了解决这个问题，网上找到了一个办法。再次在记录一下。&lt;/p&gt;</summary>
    
    
    
    
    <category term="mac" scheme="https://dctxf.com/tags/mac/"/>
    
    <category term="scripts" scheme="https://dctxf.com/tags/scripts/"/>
    
    <category term="短信" scheme="https://dctxf.com/tags/%E7%9F%AD%E4%BF%A1/"/>
    
    <category term="sms" scheme="https://dctxf.com/tags/sms/"/>
    
  </entry>
  
  <entry>
    <title>Git的简单使用方法</title>
    <link href="https://dctxf.com/2020/03/18/Git%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://dctxf.com/2020/03/18/Git%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2020-03-18T08:01:32.000Z</published>
    <updated>2020-03-19T01:48:54.275Z</updated>
    
    <content type="html"><![CDATA[<p>git 是一个 <code>分布式</code> <code>版本管理</code> 工具</p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>已安装 Git 环境<ol><li>Mac 可使用<code>homebrew</code>进行安装</li><li>Windows 可<a href="https://git-scm.com/">下载官方安装包</a>进行安装</li><li>Linux 使用<code>yum</code> <code>apt</code>等工具安装</li></ol></li><li>有 shell 工具<ol><li>Mac 使用自带终端或者 iterm2 都行</li><li>Windows 使用 git shell</li><li>Linux 使用终端</li></ol></li></ol><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><p>仓库简单理解就是你的项目。每个仓库都包含你的完整代码，仓库又分为<code>本地仓库</code>和<code>远程仓库</code></p><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p>一个项目至少包含一个分支。分支之间互不干扰。</p><h3 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h3><p>已修改但为提交的文件会保留在工作区</p><h3 id="暂存区"><a href="#暂存区" class="headerlink" title="暂存区"></a>暂存区</h3><p>已修改并已提交的文件会保留在暂存区</p><h3 id="存储区"><a href="#存储区" class="headerlink" title="存储区"></a>存储区</h3><p>因为没找到这个概念，暂时把<code>git stash</code>的文件存储地方叫做存储区</p><h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><p>你当前所在的位置</p><h2 id="简单理解"><a href="#简单理解" class="headerlink" title="简单理解"></a>简单理解</h2><p>其实每次 Git 变更可以看做一个点，多次变更做成了一条线（即分支），通过改变指针你可以穿越到任意一个时间点。但你只能查看不可变更。</p><h2 id="简单步骤"><a href="#简单步骤" class="headerlink" title="简单步骤"></a>简单步骤</h2><p>这里分成两部分，本地仓库和远程仓库</p><h3 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h3><ol><li>新建文件夹，即你的项目文件目录</li><li>进入到目录</li><li>初始化 git 项目 <code>git init</code></li><li>新增文件</li><li>添加文件到暂存区<code>git add 文件名</code></li><li>提交文件<code>git commit -m &quot;本次提交的描述信息&quot;</code></li></ol><h3 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h3><h4 id="SSH-公钥配置"><a href="#SSH-公钥配置" class="headerlink" title="SSH 公钥配置"></a>SSH 公钥配置</h4><p>一般远程仓库都要配置公钥，不然每次都会让输入用户名密码</p><ol><li>先生成本地的公钥（如果本地已有，可忽略此步）<code>ssh-keygen -t rsa</code><strong>不要输入密码</strong></li><li>复制公钥</li><li>粘贴到对应的 git 服务商的 ssh 配置中</li></ol><h4 id="同步代码"><a href="#同步代码" class="headerlink" title="同步代码"></a>同步代码</h4><ol><li>新建项目，一般可通过 github，gitlab，gitee 等工具</li><li>把本地仓库和远程仓库进行关联<code>git remote add 远程仓库名 远程仓库地址</code></li><li>推送本地代码到远程仓库<code>git push 远程仓库名 远程分支名</code></li></ol><p>到此一个简单的 Git 使用就算完成了</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="如果远程仓库的分支已被删除，本地的关联还存在怎么办？"><a href="#如果远程仓库的分支已被删除，本地的关联还存在怎么办？" class="headerlink" title="如果远程仓库的分支已被删除，本地的关联还存在怎么办？"></a>如果远程仓库的分支已被删除，本地的关联还存在怎么办？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 释放本地的远程仓库</span><br><span class="line">git remote prune 远程仓库名</span><br></pre></td></tr></table></figure><h3 id="如果本地和远程同时初始化了仓库，怎么合并？"><a href="#如果本地和远程同时初始化了仓库，怎么合并？" class="headerlink" title="如果本地和远程同时初始化了仓库，怎么合并？"></a>如果本地和远程同时初始化了仓库，怎么合并？</h3><p>此时拉取代码会提示错误，是因为有两个初始点,在拉取代码的时候忽略不相关的历史记录就行了，不过合并之后要做 merge 操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --allow-unrelated-histories</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.runoob.com/git/git-tutorial.html">Git 教程 菜鸟教程</a></li><li><a href="https://gist.github.com/guweigang/9848271">git 命令大全</a></li><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰的 Git 教程</a></li><li><a href="http://www.findme.wang/share/detail/id/279.html">git 相关概念</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;git 是一个 &lt;code&gt;分布式&lt;/code&gt; &lt;code&gt;版本管理&lt;/code&gt; 工具&lt;/p&gt;</summary>
    
    
    
    
    <category term="git" scheme="https://dctxf.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>基于Gitlab的团队协作</title>
    <link href="https://dctxf.com/2020/03/18/%E5%9F%BA%E4%BA%8EGitlab%E7%9A%84%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/"/>
    <id>https://dctxf.com/2020/03/18/%E5%9F%BA%E4%BA%8EGitlab%E7%9A%84%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/</id>
    <published>2020-03-18T07:58:14.000Z</published>
    <updated>2020-03-19T01:48:54.276Z</updated>
    
    <content type="html"><![CDATA[<p>软件开发过程中，我们会碰到各种问题，包括沟通上，技术上等等。为了在很大程度上避免这些问题，提升团队和个人的工作效率，出现很多种工作方式。特别是最近疫情的原因，远程办公造成了很多的不便。那么为了解决这些问题，出现了很多的工作方式和协同工具。</p><p>结合公司目前的情况，我选择了 gitlab 的相关功能，来解决咱们在团队协作中遇到的问题</p><p>当然任何流程都会有他的不足之处，希望大家能共同努力，加以完善，但在没有更好的方式之前，请大家严格遵守，以便提升整个团队的工作效率。</p><span id="more"></span><h2 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h2><p>不管什么样的工作方式，都需要一定的前提条件，由于每个人的理解能力，个人技能等有所不同，所以一套规范化的标准是十分有必要的。</p><p>下面的内容需要大家共同的努力才能实现。先感谢大家的努力！</p><h2 id="划重点（个人观点）"><a href="#划重点（个人观点）" class="headerlink" title="划重点（个人观点）"></a>划重点（个人观点）</h2><ol><li>清楚自己的责任范围，尽可能的提升自己专业领域内的能力</li><li>准确的、细致的理解业务的实际需求</li><li>熟悉具体的项目流程，并能够严格，准确的执行</li><li>良好的编码习惯，包括统一的编码风格，自动化测试等</li></ol><h3 id="加分项"><a href="#加分项" class="headerlink" title="加分项"></a>加分项</h3><ul><li>一台性能良好的电脑（这是咱们的武器，削笔刀是打不赢战争的）</li><li>一个良好的上网环境（最好有一把可登高望远的梯子）</li></ul><h2 id="工作优先级"><a href="#工作优先级" class="headerlink" title="工作优先级"></a>工作优先级</h2><ul><li>高优先级（High）：对系统有重大影响，只有解决它之后，才能去完成其他任务。</li><li>普通优先级（Medium）：对系统的某个部分有影响，用户的一部分操作会达不到预期效果。</li><li>低优先级（Low）：对系统的某个部分有影响，用户几乎感知不到。</li><li>微不足道（Trivial）：对系统的功能没有影响，通常是视觉效果不理想，比如字体和颜色不满意。</li></ul><p>请大家合理使用优先级，不要把所有事情都放到高优先级</p><h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><ol><li>项目立项</li><li>需求分析</li><li>产品设计、UI 设计</li><li>项目开发</li><li>代码测试</li><li>代码合并</li><li>code review</li><li>程序部署</li></ol><h3 id="项目立项，需求分析，产品设计、UI-设计"><a href="#项目立项，需求分析，产品设计、UI-设计" class="headerlink" title="项目立项，需求分析，产品设计、UI 设计"></a>项目立项，需求分析，产品设计、UI 设计</h3><p>由于咱们使用的 gitlab，gitlab 本身是给程序开发使用的，管理项目确实有点不妥。而且一般情况下，一个产品可能是有 N 多个项目组成，此时，如果有新的需求或者新的 bug 要提的话，不知道提到哪里。</p><p>目前采用方式大家在一个大组里，几乎每个人都拥有所有权限。所以请大家谨慎使用。除开发人员外，其他人没有修改代码的权限</p><h3 id="项目开发"><a href="#项目开发" class="headerlink" title="项目开发"></a>项目开发</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><table><thead><tr><th>环境</th><th>环境名称</th><th>数据库</th><th>域名</th><th>测试</th></tr></thead><tbody><tr><td>dev</td><td>开发环境</td><td>本地/测试</td><td>本地域名</td><td>自测</td></tr><tr><td>test</td><td>测试环境</td><td>测试</td><td>测试域名</td><td>测试人员</td></tr><tr><td>staging</td><td>预演环境</td><td>正式</td><td>host 域名</td><td>验收人员+测试人员</td></tr><tr><td>prod</td><td>正式环境</td><td>正式</td><td>正式域名</td><td>-</td></tr></tbody></table><h4 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h4><p>为了保证代码质量和高效协作，请大家务必保证代码风格一致</p><ul><li>前端使用<code>eslint</code>+<code>perttier</code></li></ul><h3 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h3><ul><li>在提交代码前请先自测</li></ul><h3 id="code-review"><a href="#code-review" class="headerlink" title="code review"></a>code review</h3><p>由于咱们人员的限制，这点希望大家有这个意识，如果没有人帮你看代码，自己要进行优化，保证代码质量</p><h3 id="程序部署（CI-CD）"><a href="#程序部署（CI-CD）" class="headerlink" title="程序部署（CI/CD）"></a>程序部署（CI/CD）</h3><ul><li>前端代码以后会部署到 oss</li><li>后端代码部署到 docker 服务</li></ul><h4 id="CI：持续集成（CONTINUOUS-INTEGRATION"><a href="#CI：持续集成（CONTINUOUS-INTEGRATION" class="headerlink" title="CI：持续集成（CONTINUOUS INTEGRATION"></a>CI：持续集成（CONTINUOUS INTEGRATION</h4><blockquote><p>CI/CD 中的“CI”始终指持续集成，它属于开发人员的自动化流程。成功的 CI 意味着应用代码的新更改会定期构建、测试并合并到共享存储库中。该解决方案可以解决在一次开发中有太多应用分支，从而导致相互冲突的问题。</p></blockquote><h4 id="CD-持续交付（Continuous-Delivery）"><a href="#CD-持续交付（Continuous-Delivery）" class="headerlink" title="CD 持续交付（Continuous Delivery）"></a>CD 持续交付（Continuous Delivery）</h4><blockquote><p>持续交付通常是指开发人员对应用的更改会自动进行错误测试并上传到存储库（如  GitHub  或容器注册表），然后由运维团队将其部署到实时生产环境中。这旨在解决开发和运维团队之间可见性及沟通较差的问题。因此，持续交付的目的就是确保尽可能减少部署新代码时所需的工作量。</p></blockquote><h5 id="CD-持续部署（Continuous-Deployment）"><a href="#CD-持续部署（Continuous-Deployment）" class="headerlink" title="CD 持续部署（Continuous Deployment）"></a>CD 持续部署（Continuous Deployment）</h5><blockquote><p>持续部署（另一种“CD”）指的是自动将开发人员的更改从存储库发布到生产环境，以供客户使用。它主要为了解决因手动流程降低应用交付速度，从而使运维团队超负荷的问题。持续部署以持续交付的优势为根基，实现了管道后续阶段的自动化。</p></blockquote><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/38774185">基于 GitLab 的工作流程设计</a></li><li><a href="https://www.bilibili.com/video/av71285473">视频：套路拆解:大厂是如何保证代码质量的！</a></li><li><a href="http://www.ruanyifeng.com/blog/2017/08/issue.html">如何使用 Issue 管理软件项目？</a></li><li><a href="https://scarletsky.github.io/2016/07/29/use-gitlab-ci-for-continuous-integration/">用 GitLab CI 进行持续集成</a></li><li><a href="https://www.jianshu.com/p/705428ca1410">基于 Gitlab CI 搭建持续集成环境</a></li><li><a href="https://medium.com/nick-%E5%B7%A5%E7%A8%8B%E5%B8%AB%E5%AD%B8%E7%BF%92%E8%A8%98/%E6%95%99%E5%AD%B8-gitlab-ci-%E5%85%A5%E9%96%80%E5%AF%A6%E4%BD%9C-%E8%87%AA%E5%8B%95%E5%8C%96%E9%83%A8%E7%BD%B2%E7%AF%87-ci-cd-%E7%B3%BB%E5%88%97%E5%88%86%E4%BA%AB%E6%96%87-cbb5100a73d4">[教學] Gitlab-CI 入門實作  —  自動化部署篇（CI/CD 系列分享文）</a></li><li><a href="https://www.qikqiak.com/post/gitlab-ci-k8s-cluster-feature/">Gitlab CI 与 Kubernetes 的结合</a></li><li><a href="https://ken.io/note/gitlab-code-review-tutorial">基于 GitLab 的 Code Review 教程 - Ken 的杂谈</a></li><li><a href="https://juejin.im/post/5e6d902fe51d4526d326d195">程序员如何培养好的测试习惯？</a></li><li><a href="https://zhuanlan.zhihu.com/p/31097868">一文帮你秒懂 CI, CD AND CD</a></li><li><a href="https://www.ruanyifeng.com/blog/2011/09/restful.html">理解 RESTful 架构</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;软件开发过程中，我们会碰到各种问题，包括沟通上，技术上等等。为了在很大程度上避免这些问题，提升团队和个人的工作效率，出现很多种工作方式。特别是最近疫情的原因，远程办公造成了很多的不便。那么为了解决这些问题，出现了很多的工作方式和协同工具。&lt;/p&gt;
&lt;p&gt;结合公司目前的情况，我选择了 gitlab 的相关功能，来解决咱们在团队协作中遇到的问题&lt;/p&gt;
&lt;p&gt;当然任何流程都会有他的不足之处，希望大家能共同努力，加以完善，但在没有更好的方式之前，请大家严格遵守，以便提升整个团队的工作效率。&lt;/p&gt;</summary>
    
    
    
    
    <category term="git" scheme="https://dctxf.com/tags/git/"/>
    
    <category term="gitlab" scheme="https://dctxf.com/tags/gitlab/"/>
    
    <category term="团队协作" scheme="https://dctxf.com/tags/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>python 获取项目根目录</title>
    <link href="https://dctxf.com/2020/03/09/python-%E8%8E%B7%E5%8F%96%E9%A1%B9%E7%9B%AE%E6%A0%B9%E7%9B%AE%E5%BD%95/"/>
    <id>https://dctxf.com/2020/03/09/python-%E8%8E%B7%E5%8F%96%E9%A1%B9%E7%9B%AE%E6%A0%B9%E7%9B%AE%E5%BD%95/</id>
    <published>2020-03-09T02:41:21.000Z</published>
    <updated>2020-03-19T01:48:54.276Z</updated>
    
    <content type="html"><![CDATA[<p>最近在学习 python 的过程中，配置环境变量的时候，我想要获取到 python 项目的根目录，因为我的配置文件是放在根目录的，但是我的工具类并不在根目录。网上找了一些方法，终于找到一个类似的。</p><span id="more"></span><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>找到当前目录是很简单的，然后通过项目名截取就行了</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from os import path</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">获取项目根路径</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_project_path(app_name):</span><br><span class="line">    cur_path = path.abspath(path.dirname(__file__))</span><br><span class="line">    return cur_path[:cur_path.find(app_name)]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在学习 python 的过程中，配置环境变量的时候，我想要获取到 python 项目的根目录，因为我的配置文件是放在根目录的，但是我的工具类并不在根目录。网上找了一些方法，终于找到一个类似的。&lt;/p&gt;</summary>
    
    
    
    
    <category term="python" scheme="https://dctxf.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Supervisor 网页管理器不可用解决办法</title>
    <link href="https://dctxf.com/2020/03/05/Supervisor-%E7%BD%91%E9%A1%B5%E7%AE%A1%E7%90%86%E5%99%A8%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://dctxf.com/2020/03/05/Supervisor-%E7%BD%91%E9%A1%B5%E7%AE%A1%E7%90%86%E5%99%A8%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2020-03-05T09:02:22.000Z</published>
    <updated>2020-03-19T01:48:54.276Z</updated>
    
    <content type="html"><![CDATA[<p>在配置 python 环境的时候 Supervisor 的网页管理器总是不能访问，查找了一些资料后原来是自己的 NGINX 配置有问题。</p><span id="more"></span><h2 id="Supervisor-配置"><a href="#Supervisor-配置" class="headerlink" title="Supervisor 配置"></a>Supervisor 配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[inet_http_server]</span><br><span class="line">port = 9001</span><br><span class="line">username = user</span><br><span class="line">password = 123456</span><br></pre></td></tr></table></figure><h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location ^~ /supervisor &#123;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    # hack the host https://github.com/Supervisor/supervisor/issues/251</span><br><span class="line">    proxy_set_header Host $http_host/supervisor/index.html;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    rewrite ^/supervisor(.*) /$1 break;</span><br><span class="line">    proxy_pass http://127.0.0.1:9001/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;在配置 python 环境的时候 Supervisor 的网页管理器总是不能访问，查找了一些资料后原来是自己的 NGINX 配置有问题。&lt;/p&gt;</summary>
    
    
    
    
    <category term="python" scheme="https://dctxf.com/tags/python/"/>
    
    <category term="Supervisor" scheme="https://dctxf.com/tags/Supervisor/"/>
    
  </entry>
  
  <entry>
    <title>Python环境区分</title>
    <link href="https://dctxf.com/2020/03/05/Python%E7%8E%AF%E5%A2%83%E5%8C%BA%E5%88%86/"/>
    <id>https://dctxf.com/2020/03/05/Python%E7%8E%AF%E5%A2%83%E5%8C%BA%E5%88%86/</id>
    <published>2020-03-05T08:15:26.000Z</published>
    <updated>2020-03-19T01:48:54.275Z</updated>
    
    <content type="html"><![CDATA[<p>开发中常遇到各种开发环境，刚接触 python 不是很熟悉 python 的做法，折腾了很久，终于找到了一种办法，做个简单记录。</p><span id="more"></span><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>我的项目主要使用了以下技术</p><ul><li>python3.7，python3.8</li><li>pipenv</li><li>gunicorn</li><li>Supervisor</li></ul><h2 id="环境配置文件"><a href="#环境配置文件" class="headerlink" title="环境配置文件"></a>环境配置文件</h2><p>使用<code>.ini</code>文件作为配置文件，在根目录下创建以下几个配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 默认</span><br><span class="line">config.ini</span><br><span class="line"># dev</span><br><span class="line">config.dev.ini</span><br><span class="line"># test</span><br><span class="line">config.test.ini</span><br></pre></td></tr></table></figure><p>配置文件内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[APP]</span><br><span class="line">DEBUG = True</span><br><span class="line"></span><br><span class="line">[MYSQL]</span><br><span class="line">USER = root</span><br><span class="line">PASSWD = 123456</span><br></pre></td></tr></table></figure><h2 id="配置文件工具"><a href="#配置文件工具" class="headerlink" title="配置文件工具"></a>配置文件工具</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>获取命令传入的参数，并取到自己想要的参数值作为环境变量值</p><h3 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取参数</span></span><br><span class="line">env = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> sys.argv:</span><br><span class="line">    <span class="keyword">if</span> item.find(<span class="string">&#x27;-env&#x27;</span>) &gt; -<span class="number">1</span>:</span><br><span class="line">        env = item.split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        <span class="built_in">print</span>(item.split(<span class="string">&#x27;=&#x27;</span>))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 寻找配置文件</span></span><br><span class="line">cfg = configparser.RawConfigParser()</span><br><span class="line">ini = <span class="string">&#x27;config.ini&#x27;</span> <span class="keyword">if</span> <span class="keyword">not</span> env <span class="keyword">else</span> <span class="string">f&#x27;config.<span class="subst">&#123;env&#125;</span>.ini&#x27;</span></span><br><span class="line">config_path = os.path.join(os.getcwd(), ini)</span><br><span class="line"><span class="comment"># 读取配置</span></span><br><span class="line">cfg.read(config_path, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用配置文件"><a href="#使用配置文件" class="headerlink" title="使用配置文件"></a>使用配置文件</h3><p>引入后即可使用<code>cfg[&#39;APP&#39;][&#39;DEBUG&#39;]</code>的方式使用</p><p>下面用 logger 例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">引入工具</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> myapp.utils.cfg <span class="keyword">import</span> cfg</span><br><span class="line"></span><br><span class="line">LOG_MAP = &#123;</span><br><span class="line">    <span class="string">&#x27;INFO&#x27;</span>: logging.INFO,</span><br><span class="line">    <span class="string">&#x27;WARN&#x27;</span>: logging.WARN,</span><br><span class="line">    <span class="string">&#x27;ERROR&#x27;</span>: logging.ERROR,</span><br><span class="line">    <span class="string">&#x27;DEBUG&#x27;</span>: logging.DEBUG</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># Enable logging</span></span><br><span class="line">logging.basicConfig(<span class="built_in">format</span>=cfg[<span class="string">&#x27;LOG&#x27;</span>][<span class="string">&#x27;FORMAT&#x27;</span>], level=LOG_MAP[cfg[<span class="string">&#x27;LOG&#x27;</span>][<span class="string">&#x27;LEVEL&#x27;</span>]])</span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipenv run gunicorn app:app --workers=2 --<span class="built_in">bind</span>=0.0.0.0:5000 -env=dev</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;开发中常遇到各种开发环境，刚接触 python 不是很熟悉 python 的做法，折腾了很久，终于找到了一种办法，做个简单记录。&lt;/p&gt;</summary>
    
    
    
    
    <category term="python" scheme="https://dctxf.com/tags/python/"/>
    
    <category term="env" scheme="https://dctxf.com/tags/env/"/>
    
    <category term="pipenv" scheme="https://dctxf.com/tags/pipenv/"/>
    
    <category term="gunicorn" scheme="https://dctxf.com/tags/gunicorn/"/>
    
    <category term="Supervisor" scheme="https://dctxf.com/tags/Supervisor/"/>
    
  </entry>
  
  <entry>
    <title>Python环境搭建</title>
    <link href="https://dctxf.com/2020/03/05/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://dctxf.com/2020/03/05/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-03-05T02:29:45.000Z</published>
    <updated>2020-03-19T10:18:41.028Z</updated>
    
    <content type="html"><![CDATA[<p>最近在自学 python，当中遇到了不少问题，环境是最让人头疼的地方，不同的机器出现不同的效果，这是头大，在此记录下自己的环境配置</p><span id="more"></span><h2 id="Python-安装"><a href="#Python-安装" class="headerlink" title="Python 安装"></a>Python 安装</h2><h3 id="Mac-环境"><a href="#Mac-环境" class="headerlink" title="Mac 环境"></a>Mac 环境</h3><p>安装 python ，由于 Mac 已经自带 python2，而我要用 python3，所以需要先安装 python3，这里使用<code>homebrew</code>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下命令会直接安装python的最高版本</span></span><br><span class="line">brew install python</span><br><span class="line"><span class="comment"># 安装其他版本</span></span><br><span class="line">brew install python@3.7</span><br></pre></td></tr></table></figure><h3 id="Linux-环境-debian"><a href="#Linux-环境-debian" class="headerlink" title="Linux 环境 debian"></a>Linux 环境 debian</h3><p>为了少出错，建议用源码安装</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>登陆 Python 官网下载源码地址是<a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a><br>找到你想要下载的源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载源码</span></span><br><span class="line">wget https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz</span><br><span class="line"><span class="comment"># 解压源码</span></span><br><span class="line">tar -zvxf Python-3.7.7.tgz</span><br><span class="line"><span class="comment"># 进入到解压后的文件夹</span></span><br><span class="line"><span class="built_in">cd</span> Python-3.7.7.tgz</span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/python3</span><br><span class="line"><span class="comment"># 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 添加软链接</span></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3 /usr/bin/pip3</span><br><span class="line"><span class="comment"># 查看python版本</span></span><br><span class="line">python3 -V</span><br><span class="line">pip -V</span><br></pre></td></tr></table></figure><h2 id="虚拟环境-pipenv"><a href="#虚拟环境-pipenv" class="headerlink" title="虚拟环境 pipenv"></a>虚拟环境 pipenv</h2><ul><li>安装方式参考官方 <a href="https://github.com/pypa/pipenv">https://github.com/pypa/pipenv</a></li></ul><h3 id="pipenv-常用命令"><a href="#pipenv-常用命令" class="headerlink" title="pipenv 常用命令"></a>pipenv 常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到虚拟环境</span></span><br><span class="line">pipenv shell</span><br><span class="line"><span class="comment"># 安装python包</span></span><br><span class="line">pipenv install 包名</span><br><span class="line"><span class="comment"># 安装开发依赖</span></span><br><span class="line">pipenv install 包名 --dev</span><br><span class="line"><span class="comment">#例如：</span></span><br><span class="line">pipenv install flask</span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">pipenv run python3 app.py</span><br></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>部署就都在 Linux 环境下</p><h3 id="Gunicorn"><a href="#Gunicorn" class="headerlink" title="Gunicorn"></a>Gunicorn</h3><ul><li>官网 <a href="https://gunicorn.org/">https://gunicorn.org/</a></li></ul><ol><li>安装 Gunicorn ：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipenv install gunicorn</span><br></pre></td></tr></table></figure><ol start="2"><li>使用 Gunicorn 运行一个 WSGI 程序：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pipenv run gunicorn --workers=4 --<span class="built_in">bind</span>=0.0.0.0:8000 app:app</span><br><span class="line"><span class="comment"># --workers = 4 表示使用 4 worker 进程运行程序，建议 worker 数量为 ( CPU 核心数 × 2 ) + 1</span></span><br><span class="line"><span class="comment"># Gunicorn 默认只允许从本地 8000 端口访问，--bind=0.0.0.0:8000 表示允许使用 8000 端口从外部访问</span></span><br><span class="line"><span class="comment"># app:app 冒号前面的 app 表示 app.py 文件，冒号后面的 app 表示 flask 程序的名称</span></span><br><span class="line">也可以把 --workers 简写为 -w 、--<span class="built_in">bind</span> 简写为 -b ，如下：</span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有 -b 或者 --bind 参数，默认监听 127.0.0.1:8000</span></span><br><span class="line">pipenv run gunicorn -w 4 app:app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 -b 0.0.0.0:8000 监听 8000 端口的外部请求</span></span><br><span class="line">pipenv run gunicorn -w 4 -b 0.0.0.0:8000 app:app</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>这里是后台启动关闭需要杀进程，我认为很不友好。管理进程还需要 Supervisor</p><h3 id="Supervisor"><a href="#Supervisor" class="headerlink" title="Supervisor"></a>Supervisor</h3><p>Supervisor 是一个客户端/服务器系统，允许其用户监视和控制类似 UNIX 的操作系统上的多个进程。</p><ul><li>官网 <a href="http://www.supervisord.org/">http://www.supervisord.org/</a></li></ul><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p><strong>建议使用 Python3</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>找到你的配置文件目录，有的在<code>/etc/supervisord.conf</code>,而我的在<code>/etc/supervisord/supervisord.conf</code>，增加以下配置，++<em>如果有修改即可</em>++</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 引入外部配置</span><br><span class="line">[include]</span><br><span class="line">files = /etc/supervisord.d/*.conf</span><br><span class="line"># 在supervisord.conf中设置通过web可以查看管理的进程，加入以下代码（默认即有，取消注释即可）</span><br><span class="line">[inet_http_server]</span><br><span class="line">port=9001</span><br><span class="line">username=user</span><br><span class="line">password=123</span><br></pre></td></tr></table></figure><p>增加完配置用下面的命令重载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl reload</span><br></pre></td></tr></table></figure><p>这样你就能通过界面进行访问了，地址为<code>http://localhost:9001</code></p><h4 id="常用命令（嫌命令麻烦别着急）"><a href="#常用命令（嫌命令麻烦别着急）" class="headerlink" title="常用命令（嫌命令麻烦别着急）"></a>常用命令（嫌命令麻烦别着急）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">supervisord -c /etc/supervisord.conf</span><br><span class="line"># 停止</span><br><span class="line">supervisorctl shutdown</span><br><span class="line"># 更新新的配置到supervisord</span><br><span class="line">supervisorctl update</span><br><span class="line"># 重新启动配置中的所有程序</span><br><span class="line">supervisorctl reload</span><br><span class="line"># 启动某个应用</span><br><span class="line">supervisorctl start 应用名</span><br><span class="line"># 停止某个应用</span><br><span class="line">pervisorctl stop 应用名</span><br><span class="line"># 重启某个应用</span><br><span class="line">pervisorctl restart 应用名</span><br><span class="line"># 停止全部进程</span><br><span class="line">pervisorctl stop all</span><br></pre></td></tr></table></figure><h4 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h4><p>项目配置看你上面的配置目录在哪，这里在<code>/etc/supervisord.d</code>,进入到目录，配置你的项目文件</p><p>新建项目文件 <code>vim myapp.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[program:app]</span><br><span class="line">; 下面命令中的 app:app 请修改为你实际部署时的项目名称</span><br><span class="line">command=pipenv run gunicorn --workers=2 --bind=0.0.0.0:5000 app:app</span><br><span class="line"></span><br><span class="line">; 下面的路径请修改为你创建的项目的根目录</span><br><span class="line">directory=/root/pushme</span><br><span class="line"></span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">stopsignal=QUIT</span><br><span class="line">stopasgroup=true</span><br><span class="line">killasgroup=true</span><br><span class="line"></span><br><span class="line">; 下面的用户请修改为创建该项目的用户</span><br><span class="line">user=root</span><br><span class="line"></span><br><span class="line">redirect_stderr=true</span><br><span class="line"></span><br><span class="line">; log 文件的路径你可以重新自定义</span><br><span class="line">stdout_logfile=/var/logs/log/supervisor.log</span><br><span class="line"></span><br><span class="line">; 解决编码问题</span><br><span class="line">[supervisord]</span><br><span class="line">environment=LC_ALL=&#x27;en_US.UTF-8&#x27;,LANG=&#x27;en_US.UTF-8&#x27;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://segmentfault.com/a/1190000018104547#item-7">CentOS 下使用 Pipenv + Gunicorn + Supervisor 部署 Flask 程序</a></li><li><a href="https://blog.csdn.net/shudaqi2010/article/details/51153961">Supervisor 重新加载配置启动新的进程</a></li><li><a href="https://www.jianshu.com/p/535c22ea6e28">supervisor 用法</a></li><li><a href="http://blog.cheyo.net/1.html">进程管理工具 Supervisor 的使用</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在自学 python，当中遇到了不少问题，环境是最让人头疼的地方，不同的机器出现不同的效果，这是头大，在此记录下自己的环境配置&lt;/p&gt;</summary>
    
    
    
    
    <category term="python" scheme="https://dctxf.com/tags/python/"/>
    
    <category term="pipenv" scheme="https://dctxf.com/tags/pipenv/"/>
    
    <category term="Supervisor" scheme="https://dctxf.com/tags/Supervisor/"/>
    
    <category term="Gunicorn" scheme="https://dctxf.com/tags/Gunicorn/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号开发调试办法</title>
    <link href="https://dctxf.com/2019/09/02/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E5%8A%9E%E6%B3%95/"/>
    <id>https://dctxf.com/2019/09/02/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E5%8A%9E%E6%B3%95/</id>
    <published>2019-09-02T10:22:57.000Z</published>
    <updated>2019-10-08T02:14:33.904Z</updated>
    
    <content type="html"><![CDATA[<p>在微信公众号开发的过程中，我们会遇到一些必须是线上环境才能使用的问题，那么怎么才能在本地进行开发呢？</p><span id="more"></span><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>本地开发问题所在主要是因为微信需要验证域名，只要本地使用域名访问即可，当然前提是你的域名已经经过验证了。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>利用<code>hosts</code>把域名指向本地，然后用域名访问本地服务即可。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>知道原理后，方案有很多，下面简单写几种</p><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><ul><li>修改<code>hosts</code> 例如：<code>127.0.0.1 demo.com</code></li><li>把服务改为 80 端口启动</li><li>用微信开发者工具访问<code>demo.com</code>即可开始调试</li></ul><p>优点简单易懂，缺点配置不灵活，只适合单个服务</p><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><ul><li>修改<code>hosts</code> 例如：<code>127.0.0.1 demo.com</code></li><li>本地安装<code>nginx</code> 利用 nginx 的反向代理，把请求代理到本地的各个服务上去</li><li>用微信开发者工具访问<code>demo.com</code>即可开始调试</li></ul><p>优点可配置多个服务，缺点配置较为复杂</p><h2 id="一些工具"><a href="#一些工具" class="headerlink" title="一些工具"></a>一些工具</h2><p>有一些专门改配置的工具，可以帮助我们快速的进行配置，下面推荐一些</p><ul><li><a href="https://nssurge.com/">surge</a> 网络代理抓包工具，内有 hosts 修改，Mac 和 iPhone 可用</li><li><a href="https://oldj.github.io/SwitchHosts/">SwitchHosts</a> 快速修改 hosts，开源免费，多平台</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在微信公众号开发的过程中，我们会遇到一些必须是线上环境才能使用的问题，那么怎么才能在本地进行开发呢？&lt;/p&gt;</summary>
    
    
    
    
    <category term="微信" scheme="https://dctxf.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
    <category term="调试" scheme="https://dctxf.com/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装PHP+MySql+Nginx+Wordpress</title>
    <link href="https://dctxf.com/2019/08/22/Centos7%E5%AE%89%E8%A3%85PHP-MySql-Nginx-Wordpress/"/>
    <id>https://dctxf.com/2019/08/22/Centos7%E5%AE%89%E8%A3%85PHP-MySql-Nginx-Wordpress/</id>
    <published>2019-08-22T08:52:16.000Z</published>
    <updated>2019-10-08T02:14:33.901Z</updated>
    
    <content type="html"><![CDATA[<p>公司需要一个新闻发布的系统，WordPress 是一个不错选择，记录下安装过程，以便今后使用有所参考</p><span id="more"></span><h2 id="安装-PHP-及其扩展包"><a href="#安装-PHP-及其扩展包" class="headerlink" title="安装 PHP 及其扩展包"></a>安装 PHP 及其扩展包</h2><h3 id="增加仓库"><a href="#增加仓库" class="headerlink" title="增加仓库"></a>增加仓库</h3><h4 id="CentOS-RHEL-7-x"><a href="#CentOS-RHEL-7-x" class="headerlink" title="CentOS/RHEL 7.x:"></a>CentOS/RHEL 7.x:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br></pre></td></tr></table></figure><h4 id="CentOS-RHEL-6-x"><a href="#CentOS-RHEL-6-x" class="headerlink" title="CentOS/RHEL 6.x:"></a>CentOS/RHEL 6.x:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm</span><br></pre></td></tr></table></figure><h4 id="按需安装"><a href="#按需安装" class="headerlink" title="按需安装"></a>按需安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install php71w-bcmath php71w-cli php71w-common php71w-dba php71w-devel php71w-embedded php71w-enchant php71w-fpm php71w-gd php71w-imap php71w-interbase php71w-intl php71w-ldap php71w-mbstring php71w-mcrypt php71w-mysqlnd php71w-odbc php71w-opcache php71w-pdo php71w-pdo_dblib php71w-pear php71w-pecl-apcu php71w-pecl-apcu-devel php71w-pecl-geoip php71w-pecl-igbinary php71w-pecl-igbinary-devel php71w-pecl-imagick php71w-pecl-imagick-devel php71w-pecl-memcached php71w-pecl-mongodb php71w-pecl-redis  php71w-pgsql php71w-process php71w-pspell php71w-recode php71w-snmp php71w-soap php71w-tidy php71w-xml php71w-xmlrpc</span><br></pre></td></tr></table></figure><h4 id="全部安装"><a href="#全部安装" class="headerlink" title="全部安装"></a>全部安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y php71w-bcmath php71w-cli php71w-common php71w-dba php71w-devel php71w-embedded php71w-enchant php71w-fpm php71w-gd php71w-imap php71w-interbase php71w-intl php71w-ldap php71w-mbstring php71w-mcrypt php71w-mysql php71w-mysqlnd php71w-odbc php71w-opcache php71w-pdo php71w-pdo_dblib php71w-pear php71w-pecl-apcu php71w-pecl-apcu-devel php71w-pecl-geoip php71w-pecl-igbinary php71w-pecl-igbinary-devel php71w-pecl-imagick php71w-pecl-imagick-devel php71w-pecl-memcached php71w-pecl-mongodb php71w-pecl-redis php71w-pecl-xdebug php71w-pgsql php71w-phpdbg php71w-process php71w-pspell php71w-recode php71w-snmp php71w-soap php71w-tidy php71w-xml php71w-xmlrpc</span><br></pre></td></tr></table></figure><h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h2><p>如果有 RDS 一类的服务，可跳过此步骤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">yum localinstall http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install mysql-community-server</span><br><span class="line"></span><br><span class="line">//开启mysql</span><br><span class="line">service mysqld start</span><br><span class="line"></span><br><span class="line">//查看mysql的root账号的密码</span><br><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line">//登录mysql</span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">//修改密码</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27;;</span><br></pre></td></tr></table></figure><p>如果修改密码提示密码不合法，想要设置更加简单的方法可以设置校验等级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_policy=0;</span><br></pre></td></tr></table></figure><h2 id="安装-Apache-和-PHP-模块"><a href="#安装-Apache-和-PHP-模块" class="headerlink" title="安装 Apache 和 PHP 模块"></a>安装 Apache 和 PHP 模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y httpd</span><br><span class="line">yum install -y mod_php71w</span><br></pre></td></tr></table></figure><p>如果需要 nginx 作为代理服务器需配置 httpd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/httpd/conf/httpd.conf</span><br></pre></td></tr></table></figure><p>找到<code>Listen 80</code>改为<code>Listen 8080</code></p><h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure><h3 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h3><p>进入 <code>/etc/nginx/conf.d</code> 目录新建一个配置文件，比如：<code>wutong.conf</code></p><p>增加一个 server 配置段来当做虚拟主机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 80;</span><br><span class="line"></span><br><span class="line">    server_name demo.com;</span><br><span class="line"></span><br><span class="line">    error_log logs/demo.com_error.log error;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ /index.php$is_args$args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #处理PHP格式的文件</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  /var/www/html$fastcgi_script_name;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_buffers 256 128k;</span><br><span class="line">        fastcgi_connect_timeout 300s;</span><br><span class="line">        fastcgi_send_timeout 300s;</span><br><span class="line">        fastcgi_read_timeout 300s;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装-wordpress"><a href="#安装-wordpress" class="headerlink" title="安装 wordpress"></a>安装 wordpress</h2><h3 id="下载安装-wordpress"><a href="#下载安装-wordpress" class="headerlink" title="下载安装 wordpress"></a>下载安装 wordpress</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://cn.wordpress.org/latest-zh_CN.zip   //下载 unzip</span><br><span class="line">unzip latest-zh_CN.zip</span><br><span class="line">mv wordpress/* /var/www/html</span><br></pre></td></tr></table></figure><h3 id="配置-wordpress-的配置文件，如果没有-vim-使用下面命令即可"><a href="#配置-wordpress-的配置文件，如果没有-vim-使用下面命令即可" class="headerlink" title="配置 wordpress 的配置文件，如果没有 vim 使用下面命令即可"></a>配置 wordpress 的配置文件，如果没有 vim 使用下面命令即可</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp wp-config-simple.php wp-config.php</span><br><span class="line">vim wp-config.php  //编辑wordpress的配置文件</span><br></pre></td></tr></table></figure><p>数据库配置<br>然后输入上面创建的数据库名称，用户名及密码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ** MySQL 设置 - 具体信息来自您正在使用的主机 ** //</span></span><br><span class="line"><span class="comment">/** WordPress数据库的名称 */</span></span><br><span class="line">define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;数据库名&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL数据库用户名 */</span></span><br><span class="line">define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;数据库用户名&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL数据库密码 */</span></span><br><span class="line">define( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;数据库密&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL主机 */</span></span><br><span class="line">define( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 创建数据表时默认的文字编码 */</span></span><br><span class="line">define( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 数据库整理类型。如不确定请勿更改 */</span></span><br><span class="line">define( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service nginx start</span><br><span class="line">service php-fpm start</span><br><span class="line">service httpd start</span><br><span class="line">service mysqld start</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;公司需要一个新闻发布的系统，WordPress 是一个不错选择，记录下安装过程，以便今后使用有所参考&lt;/p&gt;</summary>
    
    
    
    
    <category term="nginx" scheme="https://dctxf.com/tags/nginx/"/>
    
    <category term="centos" scheme="https://dctxf.com/tags/centos/"/>
    
    <category term="mysql" scheme="https://dctxf.com/tags/mysql/"/>
    
    <category term="php" scheme="https://dctxf.com/tags/php/"/>
    
    <category term="wordpress" scheme="https://dctxf.com/tags/wordpress/"/>
    
    <category term="运维" scheme="https://dctxf.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="博客" scheme="https://dctxf.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>前后端分离</title>
    <link href="https://dctxf.com/2019/08/14/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    <id>https://dctxf.com/2019/08/14/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/</id>
    <published>2019-08-14T08:47:07.000Z</published>
    <updated>2019-10-08T02:14:33.904Z</updated>
    
    <content type="html"><![CDATA[<p>随着产品和技术的发展，我们对效率、产品质量的要求越来越高，而且随着开发团队越来越大，以往的混合开发的弊端越来越明显。急需更好的协作方式。</p><p>前后端分离不仅仅是开发人员的分离，更重要的是项目分离，架构分离。开发效率和质量得到极大的提高。</p><span id="more"></span><h2 id="发展历程"><a href="#发展历程" class="headerlink" title="发展历程"></a>发展历程</h2><h3 id="混合开发"><a href="#混合开发" class="headerlink" title="混合开发"></a>混合开发</h3><p>前后端在同一个项目中进行开发。由前端写好 HTML，给到后端转换成 jsp 等后端模板语言，并由后端进行渲染</p><ul><li>前后端共用一个项目</li><li>后端开发量较大</li><li>不容易拓展，页面改版需要改的东西较多</li><li>发版不方便，任何改动都需要后端发版</li><li>前端基本没有脚手架</li></ul><h3 id="半分离（Ajax）"><a href="#半分离（Ajax）" class="headerlink" title="半分离（Ajax）"></a>半分离（Ajax）</h3><p>前端实现基本骨架，内容从服务端获取，前端使用字符串拼接或者前端模板进行渲染</p><ul><li>基本实现了前后分离</li><li>DOM 操作较多，性能不好，而且较为繁琐</li><li>没有路由概念，纯静态页面跳转</li><li>前端可用<code>grunt</code> <code>gulp</code>等脚手架工具进行打包，但自动化程度依旧不高</li></ul><h3 id="全分离（MV-）"><a href="#全分离（MV-）" class="headerlink" title="全分离（MV*）"></a>全分离（MV*）</h3><ul><li>前端实现路由跳转和页面渲染</li><li>前端可用<code>webpack</code> <code>rollup</code>等脚手架 自动化程度已经很高</li><li>SPA 会有空白页问题</li><li>可在前端实现鉴权操作</li><li>后端人员可只关注数据层，前后端可实现并行开发</li><li>前后端必须约定好接口规范</li></ul><h2 id="SPA-和-SSR"><a href="#SPA-和-SSR" class="headerlink" title="SPA 和 SSR"></a>SPA 和 SSR</h2><h3 id="SPA-单页面应用"><a href="#SPA-单页面应用" class="headerlink" title="SPA 单页面应用"></a><code>SPA</code> 单页面应用</h3><ul><li>首次加载较慢，需要完全加载才能展示</li><li>纯静态文件，可部署 cdn</li><li>不利于 SEO</li><li>流行框架<code>Vue</code> <code>React</code> <code>AngularJS</code></li></ul><h3 id="SSR-服务端渲染"><a href="#SSR-服务端渲染" class="headerlink" title="SSR 服务端渲染"></a><code>SSR</code> 服务端渲染</h3><ul><li>加载相对较快，不用等待资源加载</li><li>可能需要占用更多的服务器资源</li><li>流行框架<code>nuxt</code> <code>next</code></li><li>有利于 SEO</li></ul><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p>由于前端浏览器存在<em>同源策略</em> <strong>（协议，域名，端口一致则为同源）</strong> 前后端只通过接口进行交互</p><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><ol><li>前端和后端部署在同一服务器</li><li>用 nginx 代理到同一域名下</li></ol><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><ol><li>前后端部署在不同服务器</li><li>域名指向前端服务器，接口通过 nginx 代理(最好通过内网访问)或者后端允许跨域</li></ol><h2 id="老项目改造"><a href="#老项目改造" class="headerlink" title="老项目改造"></a>老项目改造</h2><p>为保证不大范围影响现有项目的情况下，可逐步进行改造。</p><ol><li>后端项目接口采用返回<code>json</code>的方式</li><li>后端接口前缀必须以<code>/api</code>开头，因为前端项目会占用<code>/</code></li><li>前后端项目前期需要部署到同一台服务器，主要目的是为了兼容老项目</li><li>前端采用框架为<code>vue</code>或<code>react</code> 建议为<code>vue</code> 上手较快，写法跟原生接近，但 vue3.x 后写法会偏向<code>es6</code></li></ol><h2 id="全新项目"><a href="#全新项目" class="headerlink" title="全新项目"></a>全新项目</h2><p>根据需求可选择不同的框架</p><ol><li>前后端约定接口</li><li>前后端并行开发</li><li>前后端进行联调</li><li>前后端分别部署并进行测试</li><li>测试完成部署到正式服务器</li></ol><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="流行的前端框架"><a href="#流行的前端框架" class="headerlink" title="流行的前端框架"></a>流行的前端框架</h3><ul><li><a href="https://cn.vuejs.org/">VueJs</a></li><li><a href="https://react.docschina.org/">React</a></li><li><a href="https://zh.nuxtjs.org/">NuxtJs</a></li><li><a href="https://nextjs.org/">NextJs</a></li><li><a href="https://element.eleme.cn/">Element</a></li><li><a href="https://ant.design/">Ant Design</a></li></ul><h3 id="课外阅读"><a href="#课外阅读" class="headerlink" title="课外阅读"></a>课外阅读</h3><ul><li><a href="https://juejin.im/post/5b71302351882560ea4afbb8">你不得不了解的前后端分离原理！</a></li><li><a href="https://blog.csdn.net/fuzhongmin05/article/details/81591072">前后端分离架构概述</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;随着产品和技术的发展，我们对效率、产品质量的要求越来越高，而且随着开发团队越来越大，以往的混合开发的弊端越来越明显。急需更好的协作方式。&lt;/p&gt;
&lt;p&gt;前后端分离不仅仅是开发人员的分离，更重要的是项目分离，架构分离。开发效率和质量得到极大的提高。&lt;/p&gt;</summary>
    
    
    
    
    <category term="前后分离" scheme="https://dctxf.com/tags/%E5%89%8D%E5%90%8E%E5%88%86%E7%A6%BB/"/>
    
    <category term="技术" scheme="https://dctxf.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Vue+Vue Router+Vuex 实现鉴权</title>
    <link href="https://dctxf.com/2019/08/09/Vue-Vue-Router-Vuex-%E5%AE%9E%E7%8E%B0%E9%89%B4%E6%9D%83/"/>
    <id>https://dctxf.com/2019/08/09/Vue-Vue-Router-Vuex-%E5%AE%9E%E7%8E%B0%E9%89%B4%E6%9D%83/</id>
    <published>2019-08-09T08:51:28.000Z</published>
    <updated>2019-10-08T02:14:33.902Z</updated>
    
    <content type="html"><![CDATA[<p>工作中采用的前端框架为 vue，项目中经常会碰到鉴权问题，比如某个页面必须登录了才能用，或者必须提前获取到某些参数才行。这时候就需要进行拦截处理</p><span id="more"></span><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ol><li>用户进入页面</li><li>判断是否符合条件，如果不符合跳转到对应页面进行补充</li></ol><h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><p>首先需要在<code>router</code>里面进行拦截，这里采用 router 的<code>beforeEach</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;../store&#x27;</span></span><br><span class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">&#x27;lodash&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getUserInfo &#125; <span class="keyword">from</span> <span class="string">&#x27;@/service&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  <span class="attr">base</span>: process.env.BASE_URL,</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;Home&#x27;</span>,</span><br><span class="line">      <span class="attr">redirect</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">meta</span>: &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;首页&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;User&#x27;</span>,</span><br><span class="line">      <span class="attr">meta</span>: &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;首页&#x27;</span>,</span><br><span class="line">        <span class="attr">auth</span>: [<span class="string">&#x27;user&#x27;</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.beforeEach(<span class="keyword">async</span> (to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (to.meta.title &amp;&amp; to.meta.title !== <span class="keyword">from</span>.meta.title) &#123;</span><br><span class="line">    <span class="built_in">document</span>.title = to.meta.title</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; state, dispatch &#125; = store</span><br><span class="line">  <span class="comment">// 获取授权列表 并去重</span></span><br><span class="line">  <span class="keyword">let</span> authList = []</span><br><span class="line">  to.matched.map(<span class="function"><span class="params">record</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> auth = record.meta.auth</span><br><span class="line">    <span class="keyword">if</span> (auth) &#123;</span><br><span class="line">      authList = _.union(authList, auth)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; authList.length; index++) &#123;</span><br><span class="line">    <span class="keyword">const</span> key = authList[index].toLocaleLowerCase()</span><br><span class="line">    <span class="comment">// 获取用户信息</span></span><br><span class="line">    <span class="keyword">if</span> (key === <span class="string">&#x27;user&#x27;</span> &amp;&amp; !state.userInfo.id) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> user = <span class="keyword">await</span> getUserInfo()</span><br><span class="line">        dispatch(<span class="string">&#x27;initUser&#x27;</span>, user)</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        next(&#123;</span><br><span class="line">          <span class="attr">replace</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">          <span class="attr">query</span>: &#123;</span><br><span class="line">            <span class="attr">redirect</span>: to.fullPath</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  next()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;工作中采用的前端框架为 vue，项目中经常会碰到鉴权问题，比如某个页面必须登录了才能用，或者必须提前获取到某些参数才行。这时候就需要进行拦截处理&lt;/p&gt;</summary>
    
    
    
    
    <category term="vue" scheme="https://dctxf.com/tags/vue/"/>
    
    <category term="vue router" scheme="https://dctxf.com/tags/vue-router/"/>
    
    <category term="vuex" scheme="https://dctxf.com/tags/vuex/"/>
    
    <category term="鉴权" scheme="https://dctxf.com/tags/%E9%89%B4%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>终结 DTraceProviderBindings</title>
    <link href="https://dctxf.com/2019/08/09/%E7%BB%88%E7%BB%93-DTraceProviderBindings/"/>
    <id>https://dctxf.com/2019/08/09/%E7%BB%88%E7%BB%93-DTraceProviderBindings/</id>
    <published>2019-08-09T00:47:53.000Z</published>
    <updated>2019-10-08T02:14:33.905Z</updated>
    
    <content type="html"><![CDATA[<p>使用 hexo 的时候老是出现找不到<code>./build/Release/DTraceProviderBindings</code>这个包。真是给跪了。Google 了很多答案，发现都没什么用。下面就讲下我的解决办法，希望对你也有用。</p><span id="more"></span><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 先卸载已安装的hexo</span></span><br><span class="line">npm uninstall hexo-cli hexo -g</span><br><span class="line"><span class="meta">#</span><span class="bash"> 确保/usr/<span class="built_in">local</span>/lib/node_modules/ 没有 hexo-cli</span></span><br><span class="line">ls /usr/local/lib/node_modules/</span><br><span class="line"><span class="meta">#</span><span class="bash"> 确保 /usr/<span class="built_in">local</span>/bin/ 没有 hexo</span></span><br><span class="line">ls /usr/local/bin/ | grep hexo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 再次安装</span></span><br><span class="line">npm install hexo-cli hexo -g</span><br><span class="line"><span class="meta">#</span><span class="bash"> 检测是否有错</span></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>此法网上说的最多，但也没什么卵用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --no-optional</span><br></pre></td></tr></table></figure><h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><p>这个是我的方法，我在无意中发现，我的<code>package.json</code>中有两个<code>hexo</code>的依赖，我删除了<code>devDependencies</code>中的依赖，然后就没问题了</p><p>具体做法如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim package.json</span><br></pre></td></tr></table></figure><p>删除下面的东西</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span>: <span class="string">&quot;^3.1.0&quot;</span> # 如果有，删除此行</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>如果不放心可运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除已安装的包</span></span><br><span class="line">rm -rf node_modules</span><br><span class="line"><span class="comment"># 重新安装依赖</span></span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>以上就是解决办法。希望对你有用。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用 hexo 的时候老是出现找不到&lt;code&gt;./build/Release/DTraceProviderBindings&lt;/code&gt;这个包。真是给跪了。Google 了很多答案，发现都没什么用。下面就讲下我的解决办法，希望对你也有用。&lt;/p&gt;</summary>
    
    
    
    
    <category term="mac" scheme="https://dctxf.com/tags/mac/"/>
    
    <category term="hexo" scheme="https://dctxf.com/tags/hexo/"/>
    
    <category term="node" scheme="https://dctxf.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>关于学习和未来，孩子必须明白这10个真相</title>
    <link href="https://dctxf.com/2019/08/09/%E5%85%B3%E4%BA%8E%E5%AD%A6%E4%B9%A0%E5%92%8C%E6%9C%AA%E6%9D%A5%EF%BC%8C%E5%AD%A9%E5%AD%90%E5%BF%85%E9%A1%BB%E6%98%8E%E7%99%BD%E8%BF%9910%E4%B8%AA%E7%9C%9F%E7%9B%B8/"/>
    <id>https://dctxf.com/2019/08/09/%E5%85%B3%E4%BA%8E%E5%AD%A6%E4%B9%A0%E5%92%8C%E6%9C%AA%E6%9D%A5%EF%BC%8C%E5%AD%A9%E5%AD%90%E5%BF%85%E9%A1%BB%E6%98%8E%E7%99%BD%E8%BF%9910%E4%B8%AA%E7%9C%9F%E7%9B%B8/</id>
    <published>2019-08-09T00:38:55.000Z</published>
    <updated>2019-10-08T02:14:33.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="读后感-关于学习和未来，孩子必须明白这10个真相"><a href="#读后感-关于学习和未来，孩子必须明白这10个真相" class="headerlink" title="[读后感] 关于学习和未来，孩子必须明白这10个真相"></a>[读后感] 关于学习和未来，孩子必须明白这<strong>10</strong>个真相</h1><p>原文：<a href="https://mp.weixin.qq.com/s/0KYYB4_j0_My6WTmx5HZkg">https://mp.weixin.qq.com/s/0KYYB4_j0_My6WTmx5HZkg</a></p><p>[toc]</p><h2 id="世界很公平"><a href="#世界很公平" class="headerlink" title="世界很公平"></a>世界很公平</h2><blockquote><p>正是因为有人住高楼，有人在深沟，有人光万丈，有人一身锈，所以我们才要拼尽所有去努力，死磕到底不放弃，赢得属于自己的最大公平。</p></blockquote><p>你努力的原因永远不要是金钱和名望，而应该是寻找你真实的自己。</p><span id="more"></span><h2 id="要改变世界从现在做起，从小事做起，而且不要迷失自我"><a href="#要改变世界从现在做起，从小事做起，而且不要迷失自我" class="headerlink" title="要改变世界从现在做起，从小事做起，而且不要迷失自我"></a>要改变世界从现在做起，从小事做起，而且不要迷失自我</h2><blockquote><p>仅仅有情绪还是不够的。你还要有能力有行动去改变：当你变成站在人群中闪闪发光的人，你才有可能一言九鼎，打破偏见。</p></blockquote><p>改变世界这样的大事，你要不断的去做，而且不要因为自己的能力限制而放弃。在这过程中，你会经历挫折，但也会收获更多。更重要的是你不要丢失你自己，丢失你的梦想。</p><h2 id="你就是独一无二的"><a href="#你就是独一无二的" class="headerlink" title="你就是独一无二的"></a>你就是独一无二的</h2><blockquote><p>你唯有承认自己够平凡，才会在接纳自己、安放自己的同时，珍贵自己，创造奇迹。</p></blockquote><p>你找不到世界上跟你完全一样的第二个人，如果你认为你和别人一样，你怎么做到别人做不到的事情</p><h2 id="相貌并不能决定一切"><a href="#相貌并不能决定一切" class="headerlink" title="相貌并不能决定一切"></a>相貌并不能决定一切</h2><p>相貌可以决定一些事情，但并不是全部。相比外在，你更应该在意自己的内心。一个内心不强大的人，外在多么漂亮，多么强大都是无用的</p><h2 id="聪明是聪明，善良是善良"><a href="#聪明是聪明，善良是善良" class="headerlink" title="聪明是聪明，善良是善良"></a>聪明是聪明，善良是善良</h2><blockquote><p>真正聪明是善良 愚蠢的人都溺死在故作聪明的河里，而聪明的人都走到了大智若愚的山上。</p></blockquote><p>溺死在河里证明他不聪明，并不能证明他不善良。</p><h2 id="梦想很遥远，但是你正在走近它"><a href="#梦想很遥远，但是你正在走近它" class="headerlink" title="梦想很遥远，但是你正在走近它"></a>梦想很遥远，但是你正在走近它</h2><blockquote><p>梦想从来不遥远 请从此刻起，摒弃脑海里的战争，着手解决眼前事，去做那些具体的事儿，哪怕是一道悬而未解的数学题。</p></blockquote><p>如果你有梦想，那么朝着你的梦想努力吧，不管多远，只要你坚持，都有可能到达</p><h2 id="学习是一件有趣的事情"><a href="#学习是一件有趣的事情" class="headerlink" title="学习是一件有趣的事情"></a>学习是一件有趣的事情</h2><blockquote><p>学习从来不快乐 学习是难的，但当它化成技能和本领，让你在这个世界游刃有余地行走时，你会明白，所有眼前的难，都是为了将来的易。</p></blockquote><p>学习能让你了解自己，了解世界。没有比这更让人快乐的事情了。你现在的学习，是为了以后发现更加灿烂的世界，而你所经历的苦难，则是你更好的学习机会</p><h2 id="允许自己经历所谓的失败"><a href="#允许自己经历所谓的失败" class="headerlink" title="允许自己经历所谓的失败"></a>允许自己经历所谓的失败</h2><blockquote><p>你终极的使命，就是找到你自己，做最真实的自己。</p></blockquote><p>这点我认同，但是我并不认为你失败了，失败的是你并没有达到你的目标，并不是你</p><h2 id="勤奋本身就是一个优秀的品质，不需要其他来证明"><a href="#勤奋本身就是一个优秀的品质，不需要其他来证明" class="headerlink" title="勤奋本身就是一个优秀的品质，不需要其他来证明"></a>勤奋本身就是一个优秀的品质，不需要其他来证明</h2><blockquote><p>勤奋未必能补拙 勤奋不一定优秀，但如果你足够勤奋，你一定能发现自己优秀在何处。</p></blockquote><p>即使你不断的为你爱的人付出，但是没有任何回应，也没有关系，你只是在证明你爱他，并不是证明他一定要爱你。</p><p>如果你不是很聪明，那么就用勤奋弥补，如果你很聪明，那就让勤奋助你跑的更快</p><h2 id="成绩并不是那么重要"><a href="#成绩并不是那么重要" class="headerlink" title="成绩并不是那么重要"></a>成绩并不是那么重要</h2><blockquote><p>成绩依然至关重要 这成绩，并非仅仅指成绩单上的分数，还有你生而为人的素养：你的努力，你的修为，你的良善，你的底线，都在这成绩之内。</p></blockquote><p>成绩是别人给你划的参考线，而收获才是你自己的。</p><p>成绩单上的成绩是别人眼中的你，而真实的你并不需要别人来评判</p><p>好的成绩是你融入集体的条件，真实的自己才是你毕生的追求</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;读后感-关于学习和未来，孩子必须明白这10个真相&quot;&gt;&lt;a href=&quot;#读后感-关于学习和未来，孩子必须明白这10个真相&quot; class=&quot;headerlink&quot; title=&quot;[读后感] 关于学习和未来，孩子必须明白这10个真相&quot;&gt;&lt;/a&gt;[读后感] 关于学习和未来，孩子必须明白这&lt;strong&gt;10&lt;/strong&gt;个真相&lt;/h1&gt;&lt;p&gt;原文：&lt;a href=&quot;https://mp.weixin.qq.com/s/0KYYB4_j0_My6WTmx5HZkg&quot;&gt;https://mp.weixin.qq.com/s/0KYYB4_j0_My6WTmx5HZkg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;世界很公平&quot;&gt;&lt;a href=&quot;#世界很公平&quot; class=&quot;headerlink&quot; title=&quot;世界很公平&quot;&gt;&lt;/a&gt;世界很公平&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;正是因为有人住高楼，有人在深沟，有人光万丈，有人一身锈，所以我们才要拼尽所有去努力，死磕到底不放弃，赢得属于自己的最大公平。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你努力的原因永远不要是金钱和名望，而应该是寻找你真实的自己。&lt;/p&gt;</summary>
    
    
    
    
    <category term="教育" scheme="https://dctxf.com/tags/%E6%95%99%E8%82%B2/"/>
    
    <category term="学习" scheme="https://dctxf.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
